Install Composer globally.
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/bin --filename=composer

For Installaing Magento using composer
composer create-project --repository=https://repo.magento.com/ magento/project-community-edition=2.3.0-beta32 --stability=beta .
for stable version: composer create-project --repository=https://repo.magento.com/ magento/magento2.com

composer config --global repos.packagist composer https://packagist.org

or
If composer download issue at dev at url:https://packagist.org on composer.json file then run composer -vvv update after that composer install
"repositories": [
    {
        "type": "composer",
        "url": "https://packagist.org"
    },
    { 
        "packagist": false 
    }

If stablitiy issue happens in composer install then change prefer-stable to false

cd /var/www/html/<magento install directory>
find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
chown -R :www-data . // Ubuntu
chmod u+x bin/magento
composer install -v

Magento DB User
CREATE DATABASE m23;
CREATE USER 'm23'@'localhost' IDENTIFIED BY 'm23';
GRANT ALL PRIVILEGES ON m23.* TO  'm23'@'localhost' IDENTIFIED BY 'm23';
FLUSH PRIVILEGES;

Magento Install via commandline
php bin/magento setup:install \
--base-url=http://192.168.0.103/m23 \
--db-host=localhost \
--db-name=m23 \
--db-user=m23 \
--db-password=m23 \
--backend-frontname=admin \
--admin-firstname=admin \
--admin-lastname=admin \
--admin-email=mujahed.marukh@purplecowservices.com.com \
--admin-user=admin \
--admin-password=admin123 \
--language=en_US \
--currency=USD \
--timezone=America/Chicago \
--use-rewrites=1
sudo -u www-data php -dmemory_limit=-1 bin/magento sampledata:deploy
php bin/magento setup:upgrade



CSS Issue in Apache2
Open /etc/apache2/apache2.conf 
Find <Directory /var/www/>

Replace rules inside with below rules.


<Directory /var/www/>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted

</Directory>

Cronfro Magento
* * * * * /usr/bin/php /var/www/html/m23/bin/magento cron:run | grep -v "Ran jobs by schedule" >> /var/www/html/m23/var/log/magento.cron.log
* * * * * /usr/bin/php /var/www/html/m23/update/cron.php >> /var/www/html/m23/var/log/update.cron.log
* * * * * /usr/bin/php /var/www/html/m23/bin/magento setup:cron:run >> /var/www/html/m23/var/log/setup.cron.log
crontab -u www-data -e

Public Key: 72bcab27c05160d8be49b31a4fe756d8
Private Key: f6a13a25219aa0561c3e971db8c86ece

Apache2 Installation Ubuntu:
sudo apt install apache2
#check for errors using
sudo apache2ctl configtest

apache2 Main configuration file in Ubuntu: /etc/apache2/apache2.conf
To solve FQDN error open:
sudo nano /etc/apache2/apache2.conf
and Add ServerName ip_address at the end of the file
reload apache2 : sudo systemctl restart apache2 or sudo service apache2 reload

Change Apache user
sudo gedit /etc/apache2/envvars
#export APACHE_RUN_USER=www-data
export APACHE_RUN_USER=cody
#export APACHE_RUN_GROUP=www-data
export APACHE_RUN_GROUP=cody

Change apache root directory
https://askubuntu.com/questions/337874/change-apache-document-root-folder-to-secondary-hard-drive
To change Apache's root directory, run:

cd /etc/apache2/sites-available
Then open the 000-default.conf file using the command:

nano 000-default.conf
Edit the DocumentRoot option:

DocumentRoot /path/to/my/project
Then restart the apache server:

sudo service apache2 restart

If you get Forbidden You don't have permission to access / on this server after changing the root of apache then do follow these steps

Find the apache2.conf located in /etc/apache2 and open it using:

nano apache2.conf
Use Ctrl+W and search for Directory (It should be in line 153)

It should look like this

<Directory />
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all denied
</Directory>
Change it to

<Directory />
    Options Indexes FollowSymLinks Includes ExecCGI
    AllowOverride All
    Require all granted
</Directory>
Restart apache

sudo service apache2 restart






Adjust the Firewall to Allow Web Traffic: sudo ufw app list
sudo ufw enable # enable ufw
Check info for Apache: sudo ufw app info "Apache Full"
Allow traffic in ufw: sudo ufw allow in "Apache Full"

Install Nginx on Ubuntu:
sudo apt-get install nginx
sudo nano /etc/nginx/sites-available/magento2.com
sudo ln -s /etc/nginx/sites-available/magento2.com /etc/nginx/sites-enabled/magento2.com
#Test config of nginx
sudo nginx -t
#Enable nginx on Boot
sudo systemctl enable nginx.service
sudo ufw app list
sudo ufw allow 'Nginx HTTP'
sudo ufw status

#restart nginx
sudo systemctl restart nginx Or sudo service nginx reload



Install curl: sudo apt install curl

Install mariadb: sudo apt-get install mariadb-server
or
Instal mysql: sudo apt install mysql-server

set password for mysql : mysql_secure_installation
If got error in for root password Mariadb:
sudo mysql -u root
use mysql;
update user set plugin='' where user='root';
flush privileges;
sudo service mysql restart

If got error in for root password mysql:
sudo mysql -u root
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'newpassword';
use mysql;
flush privileges;
exit mysql
sudo service mysql restart


Install php in Ubuntu:
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php7.1
sudo apt-get install php7.1 php7.1-cli php7.1-common php7.1-json php7.1-opcache php7.1-mysql php7.1-mbstring php7.1-mcrypt php7.1-zip php7.1-fpm php7.1-gd php7.1-intl
php7.1-soap php7.1-xml php7.1-dom php7.1-bcmath php7.1-curl php7.1-soap
for apache libmodapche2-mod-php7.1

To run any command with magento directory
sudo -u www-data command

How To Install and Configure Elasticsearch on Ubuntu 16.04:
Need Java for Elastic search to work: Installation of Java-:
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo update-alternatives --config java #select the previously install java version
Adding JAVA_HOME variable to environment:
sudo nano /etc/environment
Add JAVA_HOME="Location to be selection from previously selection java version in update-alternative command" in quotes
source /etc/environment
check installation by typing java or java -v on terminal

https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-elasticsearch-on-ubuntu-16-04
Elastic search install:
get download link from https://www.elastic.co/downloads/elasticsearch or deb package
wget link
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.3.deb
sudo dpkg -i elasticsearch*.deb
sudo systemctl enable elasticsearch.service

Configuring Elasticsearch:
The Elasticsearch configuration files are in the /etc/elasticsearch directory. There are two files:

elasticsearch.yml configures the Elasticsearch server settings. This is where all options, except those for logging, are stored, which is why we are mostly interested in this file.
logging.yml provides configuration for logging. In the beginning, you don't have to edit this file. You can leave all default logging options. You can find the resulting logs in /var/log/elasticsearch by default.

sudo nano /etc/elasticsearch/elasticsearch.yml
cluster.name: mycluster1
node.name: "My First Node"

sudo systemctl start elasticsearch

https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-redis-on-ubuntu-16-04
Redis -server installation on Ubuntu:
sudo apt-get install build-essential tcl
cd /tmp
curl -O http://download.redis.io/redis-stable.tar.gz
tar xzvf redis-stable.tar.gz
cd redis-stable
make
make test
sudo make install

Configuring Redis
sudo mkdir /etc/redis
sudo cp /tmp/redis-stable/redis.conf /etc/redis
sudo nano /etc/redis/redis.conf

Change supervised no to supervised systemd & dir ./ dir /var/lib/redis

Create a Redis systemd Unit File
sudo nano /etc/systemd/system/redis.service
[Unit]
Description=Redis In-Memory Data Store
After=network.target
[Service]
User=redis
Group=redis
ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf
ExecStop=/usr/local/bin/redis-cli shutdown
Restart=always
[Install]
WantedBy=multi-user.target

Create the Redis User, Group and Directories
sudo adduser --system --group --no-create-home redis
sudo mkdir /var/lib/redis
sudo chown redis:redis /var/lib/redis
sudo chmod 770 /var/lib/redis

Start redis service
sudo systemctl start redis
sudo systemctl enable redis
redis port 6379

Nodejs installation:
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo npm install -g pm2


Github access issue for composer
composer config -g github-oauth.github.com 90a779ebfc0916d41d39ed98756afd667ffff1d8

sudo npm install learna



Set Static IP on Ubuntu
sudo nano /etc/network/interfaces
iface <interface> inet static
	address 192.168.0.100
	netmask 255.255.255.0
	gateway 192.168.0.1
dns-nameservers 8.8.8.8 8.8.4.4


Graphql Query for Magento 2

{
    products(
      search: "Yoga pants"
          )
    {
        total_count
        items {
          name
          sku
          
        }
      }
}











